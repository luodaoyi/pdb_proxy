name: Build Docker Image

on:
  release:
    types: [created] # 表示在创建新的 Release 时触发

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Extract branch name
        run: |
          export BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})
          export TAG_NAME=$(echo ${GITHUB_REF#refs/tags/})
          echo "##[set-output name=branch;]$BRANCH_NAME"
          if [ $BRANCH_NAME = "main" ] || [ $BRANCH_NAME = "master" ]
            then echo "##[set-output name=tag;]latest"
            else echo "##[set-output name=tag;]$TAG_NAME"
          fi
        id: extract_branch

      - name: Log in to the GHCR
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up image name
        run: |
          GHRC_IMAGE_NAME=$(echo "ghcr.io/${{ github.repository }}" | tr '[:upper:]' '[:lower:]') 
          echo "::set-output name=GHRC_IMAGE_NAME::$GHRC_IMAGE_NAME"
        id: image-name

      - name: Build Docker image And Push
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          platforms: linux/amd64, linux/arm64, linux/arm, linux/s390x, linux/riscv64
          push: true
          tags: |
            ${{ steps.image-name.outputs.GHRC_IMAGE_NAME }}:latest
            ${{ steps.image-name.outputs.GHRC_IMAGE_NAME }}:${{ steps.extract_branch.outputs.tag }}